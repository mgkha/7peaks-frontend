const path = require("path");
const { VanillaExtractPlugin } = require("@vanilla-extract/webpack-plugin");
const ModuleScopePlugin = require("react-dev-utils/ModuleScopePlugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");

module.exports = {
  style: {
    css: {
      loaderOptions: {
        url: false,
      },
    },
  },
  webpack: {
    plugins: [new VanillaExtractPlugin(), new MiniCssExtractPlugin()],
    module: {
      rules: [
        {
          test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
          use: [
            MiniCssExtractPlugin.loader,
            {
              loader: require.resolve("css-loader"),
              options: {
                url: false, // Required as image imports should be handled via JS/TS import statements
              },
            },
          ],
        },
      ],
    },
    alias: {
      "@": path.resolve(__dirname, "src"),
    },
    configure: (webpackConfig) => {
      const moduleScopePlugin = webpackConfig.resolve.plugins.find(
        (plugin) => plugin instanceof ModuleScopePlugin
      );
      moduleScopePlugin.allowedPaths.push(
        path.resolve(__dirname, "node_modules/@vanilla-extract/webpack-plugin")
      );

      return webpackConfig;
    },
  },
  jest: {
    configure: (jestConfig) => {
      jestConfig.transform = {
        "\\.css\\.ts$": "@vanilla-extract/jest-transform",
        ...jestConfig.transform,
      };
      jestConfig = {
        ...jestConfig,
        moduleNameMapper: {
          "^@/(.*)$": "<rootDir>/src/$1",
        },
        collectCoverageFrom: [
          "src/**/*.{js,jsx,ts,tsx}",
          "!src/**/*.d.ts",
          "!src/**/*.stories.{js,jsx,ts,tsx}",
          "!src/test/**/*.{js,jsx,ts,tsx}",
        ],
      };
      return jestConfig;
    },
  },
};
